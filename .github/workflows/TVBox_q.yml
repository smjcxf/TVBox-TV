name: TVBox_q

on:
  push:
  schedule:
    - cron: 15,45 0-18,22-23 * * *
  workflow_dispatch:
    inputs:
      rebuild:
        description: '忽略构建记录以重新构建'
        required: false
        type: boolean
      donotpublish:
        description: '构建后不提交发布新版'
        required: false
        type: boolean
      testOption:
        description: 'arm64支持，不支持ijk解码'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: q215613905
            repoName: TVBoxOS
            branchName: main
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check New Commit
        run: |
          upStream=https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}
          echo "upStream=$upStream" >> $GITHUB_ENV
          commit=$(curl -sL $upStream/commits/${{ matrix.branchName }} |grep -o "/${{ matrix.userName }}/${{ matrix.repoName }}/commit/[a-z0-9]\+" |head -1 | cut -d\/ -f5)
          if ! grep -q "$commit" README.md || [ "${{ inputs.rebuild }}" == "true" ]; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "commitS=${commit:0:7}" >> $GITHUB_ENV
          fi
      - name: Checkout Source Code
        if: ${{ env.commit }}
        run: |
          git clone ${{ env.upStream }} TVBox-TV
          cd TVBox-TV
          git checkout ${{ env.commit }}
          echo "tag=$(git log --date=format:'%Y%m%d-%H%M' --pretty=format:%cd ${{ env.commitS }} -1)" >> $GITHUB_ENV
      - name: Extra Modify
        if: ${{ env.commit }}
        working-directory: TVBox-TV
        run: |
          echo '修改VersionName'
          sed -i "/versionName/s#[0-9a-zA-Z_\.\'\"-]\+\$#\'${{ env.tag }}\'#" app/build.gradle
          sed -i "/android:text=/s#=\"#=\"${{ env.tag }}\\\\n\\\\n#" app/src/main/res/layout/dialog_about.xml
          echo 'crosswalk源，防挂'
          if grep -q 'crosswalk' build.gradle; then
            sed -i "/crosswalk/a\        maven { url 'https://xinyi1984.github.io/crosswalk/releases/crosswalk/android/maven2' }" build.gradle
          else
            sed -i "/jitpack.io/a\        maven { url 'https://xinyi1984.github.io/crosswalk/releases/crosswalk/android/maven2' }" build.gradle
          fi
      - name: Compress Source Code
        if: ${{ env.commit }}
        working-directory: TVBox-TV
        run: |
          zip -q -x ".git/*" -x  ".github/*" -r source-${{ env.commitS }}.zip .
          #tar -cJf source-${{ env.commitS }}.tar.xz --exclude=.git --exclude=.github *
      - name: Option For Test
        if: ${{ inputs.testOption }}
        working-directory: TVBox-TV
        run: |
          #添加arm64支持，不支持ijk解码
          sed -i "/armeabi-v7a[\'\"]$/s#\$#, 'arm64-v8a'#" app/build.gradle
          sed -i "/armeabi-v7a[\'\"]$/s#\$#, 'arm64-v8a'#" player/build.gradle
      - name: Release Apk Sign
        if: ${{ env.commit }}
        working-directory: TVBox-TV
        run: |
          signingConfigs='ICAgIHNpZ25pbmdDb25maWdzIHtcCiAgICAgICAgaWYgKHByb2plY3QuaGFzUHJvcGVydHkoIlJFTEVBU0VfU1RPUkVfRklMRSIpKSB7XAogICAgICAgICAgICBteUNvbmZpZyB7XAogICAgICAgICAgICAgICAgc3RvcmVGaWxlIGZpbGUoUkVMRUFTRV9TVE9SRV9GSUxFKVwKICAgICAgICAgICAgICAgIHN0b3JlUGFzc3dvcmQgUkVMRUFTRV9TVE9SRV9QQVNTV09SRFwKICAgICAgICAgICAgICAgIGtleUFsaWFzIFJFTEVBU0VfS0VZX0FMSUFTXAogICAgICAgICAgICAgICAga2V5UGFzc3dvcmQgUkVMRUFTRV9LRVlfUEFTU1dPUkRcCiAgICAgICAgICAgICAgICB2MVNpZ25pbmdFbmFibGVkIHRydWVcCiAgICAgICAgICAgICAgICB2MlNpZ25pbmdFbmFibGVkIHRydWVcCiAgICAgICAgICAgICAgICBlbmFibGVWM1NpZ25pbmcgPSB0cnVlXAogICAgICAgICAgICAgICAgZW5hYmxlVjRTaWduaW5nID0gdHJ1ZVwKICAgICAgICAgICAgfVwKICAgICAgICB9XAogICAgfVwKXA=='
          signingConfig='ICAgICAgICAgICAgaWYgKHByb2plY3QuaGFzUHJvcGVydHkoIlJFTEVBU0VfU1RPUkVfRklMRSIpKSB7XAogICAgICAgICAgICAgICAgc2lnbmluZ0NvbmZpZyBzaWduaW5nQ29uZmlncy5teUNvbmZpZ1wKICAgICAgICAgICAgfVwK'
          signingConfigs="$(echo "$signingConfigs" |base64 -d )"
          signingConfig="$(echo "$signingConfig" |base64 -d )"
          sed -i -e "/defaultConfig {/i\\$signingConfigs " -e "/debug {/a\\$signingConfig " -e "/release {/a\\$signingConfig " app/build.gradle
          cp -f ${{ github.workspace }}/.github/workflows/TVBoxOSC.jks app/TVBoxOSC.jks
          sed -i '$a\RELEASE_STORE_FILE=./TVBoxOSC.jks'     ./gradle.properties
          sed -i '$a\RELEASE_KEY_ALIAS=TVBoxOSC'            ./gradle.properties
          sed -i '$a\RELEASE_STORE_PASSWORD=TVBoxOSC'       ./gradle.properties
          sed -i '$a\RELEASE_KEY_PASSWORD=TVBoxOSC'         ./gradle.properties
      # Set up JDK 17 解决androidx/room/RoomProcessor has been compiled by a more recent version of the Java Runtime (class file version 61.0), this version of the Java Runtime only recognizes class file versions up to 55.0  61需要java-version: 17
      #- name: set up JDK 17 
        #if: ${{ env.commit }}
        #uses: actions/setup-java@v4
        #with:
          #distribution: 'temurin'
          #java-version: '17'
      - name: Setup Gradle
        if: ${{ env.commit }}
        uses: gradle/gradle-build-action@v3
      - name: Build With Gradle
        if: ${{ env.commit }}
        working-directory: TVBox-TV
        run: |
          chmod +x gradlew
          ./gradlew assemblerelease --build-cache --parallel --daemon --warning-mode all
      - name: Prepare App
        if: ${{ env.commit }}
        working-directory: TVBox-TV
        run: |
          rm -rf apk/
          mkdir -p apk/
          for file in `find ~ -name "*release*.apk" -print`; do
            mv "$file" apk/TVBox_${{ matrix.userName }}.apk
          done
      - name: Release Note
        if: ${{ env.commit }}
        working-directory: TVBox-TV
        run: |
          lastCommit=$(grep "${{ matrix.userName }}\/${{ matrix.repoName }}" ${{ github.workspace }}/README.md |grep -o '[a-z0-9]\{40\}')
          export LESSCHARSET=utf-8
          echo -e "Credit: [${{ matrix.userName }}](${{ env.upStream }})\nCommit: ${{ env.commit }}\nChangelog:" > apk/${{ matrix.userName }}-Release.log
          if [ "${{ env.commit }}" == "${lastCommit}" ]; then
            git log --pretty=format:%B ${{ env.commitS }} -1 |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2- >> apk/${{ matrix.userName }}-Release.log
          else
            git log --pretty=format:%B ${{ env.commitS }}...${lastCommit:0:7} |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2- >> apk/${{ matrix.userName }}-Release.log
          fi
      #- name: Upload App To Artifact
         #uses: actions/upload-artifact@v3
         #if: ${{ env.commit }}
         #with:
           #name: ${{ matrix.userName }}-${{ matrix.repoName }}
           #path: |
             #TVBox-TV/apk/*
       #- name: Whether Or Not to Publish
         #if: ${{ inputs.donotpublish && env.commit }}
         #run: |
           #echo "commit=" >> $GITHUB_ENV
            
      - name: 安装jq并检索并删除包含特定链接的Releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBXYTV_TOKEN }} # 使用GitHub提供的默认TOKEN进行身份验证
          TARGET_CONTENT: "${{ matrix.userName }}" # 替换为你要在Releases描述中搜索的实际链接
        run: |
          # 更新apt包列表并安装jq
          sudo apt-get update
          sudo apt-get install -y jq

          # 初始化变量来存储需要删除的Releases的ID
          DELETE_RELEASE_IDS=""

          # 设置GitHub API的Releases端点URL
          RELEASES_URL="https://api.github.com/repos/${{ github.repository }}/releases"

          # 使用curl获取所有Releases的JSON数据，并通过jq过滤出body中包含目标内容的Releases的ID
          echo "检索Releases并筛选包含特定内容的Releases..."
          RELEASES_IDS=$(curl -s "$RELEASES_URL?per_page=100" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" |
            jq -r --arg target_content="$TARGET_CONTENT" '.[] | select(.body | contains($target_content)) | .id')

          # 检查是否找到了需要删除的Releases
          if [ -n "$RELEASES_IDS" ]; then
            echo "找到包含指定内容的Releases，开始删除..."

            # 逐个删除找到的Releases
            for id in $RELEASES_IDS; do
              DELETE_URL="https://api.github.com/repos/${{ github.repository }}/releases/$id"
              echo "正在删除Release ID: $id"
              curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" "$DELETE_URL"
              echo "已删除Release ID: $id"
            done
          else
            echo "未找到包含指定内容的Releases，跳过删除操作。"
          fi
          
      - name: Release and Upload Assets
        uses: ncipollo/release-action@v1
        if: ${{ env.commit }}
        with:
           name: ${{ env.tag }}
           tag: ${{ env.tag }}
           bodyFile: TVBox-TV/apk/${{ matrix.userName }}-Release.log
           allowUpdates: true
           removeArtifacts: true
           artifacts: |
             TVBox-TV/apk/*.apk
             TVBox-TV/source-${{ env.commitS }}.*
      
      - name: Post To Telegram
        if: ${{ env.commit }}
        working-directory: TVBox-TV
        run: |
          if [ -n "${{ secrets.CHANNEL_ID }}" ] && [ -n "${{ secrets.BOT_TOKEN }}" ]; then
            OUTPUT="${{ github.workspace }}/TVBox-TV"
            export appRelease=$(find $OUTPUT/apk/ -name "TVBox_${{ matrix.userName }}.apk")
            export sourceCode=$(find $OUTPUT -name "source-${{ env.commitS }}.*")
            ESCAPED="$(sed -e '1s/\[\(.*\)\].*/#\1/' -e 's#\([&"\/]\)#\\\1#g' apk/${{ matrix.userName }}-Release.log)"
            count=$(echo "$ESCAPED" |wc -m |cut -d ' ' -f1)
            if [ ${count} -eq 1 ] || [ ${count} -gt 1024 ]; then
              ESCAPED="$(echo -e "Credit: #${{ matrix.userName }}\nCommit: ${{ env.commit }}\nChangelog:\n${{ env.upStream }}/commits/${{ matrix.branchName }}")"
            fi
            ESCAPED=`python3 -c "import urllib.parse, sys; print(urllib.parse.quote(sys.argv[1]))" "$ESCAPED"`
            #检查源码尺寸，太大则不上传
            file_size=$(du -s ${sourceCode} | awk '{print $1}')
            #文件最大值，1024代表1M
            file_limit_size=20480
            if [[ ${file_size} -lt ${file_limit_size} ]];then
              curl -v "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMediaGroup?chat_id=${{ secrets.CHANNEL_ID }}&media=%5B%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FappRelease%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FsourceCode%22%2C%20%22caption%22%3A%22${ESCAPED}%22%7D%5D" -F appRelease="@$appRelease" -F sourceCode="@$sourceCode"
            else
              curl -v "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMediaGroup?chat_id=${{ secrets.CHANNEL_ID }}&media=%5B%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FappRelease%22%2C%20%22caption%22%3A%22${ESCAPED}%22%7D%5D" -F appRelease="@$appRelease"
            fi
          fi
      
      - name: Upload json To xytv
        if: ${{ env.commit }}
        working-directory: TVBox-TV
        run: |  
          git clone https://github.com/xinyi1984/xytv.git
          sed -i "s#https://mirror.ghproxy.com/https://github.com/xinyi1984/TVBox-TV/releases/download/[0-9\-]*/TVBox_${{ matrix.userName }}#https://mirror.ghproxy.com/https://github.com/xinyi1984/TVBox-TV/releases/download/${{ env.tag }}/TVBox_${{ matrix.userName }}#g" xytv/json/market.json
          cd xytv
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add json/market.json
          git remote rm origin
          git remote add origin "https://xinyi1984:${{ secrets.GITHUBXYTV_TOKEN }}@github.com/xinyi1984/xytv"
          git commit -m "更新market.json"
          git push -f -u origin master
        continue-on-error: true
          
      - name: Push to master
        if: ${{ env.commit }}
        run: |
          rm -rf TVBox-TV
          sed -i '/url =/d' ./.git/config
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git pull --rebase
          sed -i "/${{ matrix.userName }}\/${{ matrix.repoName }}/s#Updated: [a-zA-Z0-9]*#Updated: ${{ env.commit }}#" README.md
          git add --all
          git commit -m "${{ env.commit }}"
          git push -u -f origin master
          #continue-on-error: true 是因为 git commit 会失败也是预期的，这个步骤可以忽略失败。加上这个命令就可以在这个步骤失败的时候，不会影响其他步骤
        continue-on-error: true
